{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Arial-BoldMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red95\green112\blue168;
\red255\green255\blue255;\red95\green112\blue168;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c44706\c52157\c71765;
\cssrgb\c100000\c100000\c100000;\cssrgb\c44706\c52157\c71765;}
\margl1440\margr1440\vieww33100\viewh17880\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec4 Input and Output
\f1\b0 \ulnone \
BufferedReader br = new BufferedReader(new FileReader("Promote.in"));      			read file from USACO competition.\strokec5 \
\strokec4 PrintWriter pw = new PrintWriter(BufferedWriter(new FileWriter("Promote.out")));     	print output to a file and submit to USACO.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec5 \
1. \strokec4 BufferedReader reads lines, giving efficiency, while FileReader reads characters, it is more efficient to read line by line. \strokec5 \
        \strokec4 // InputStreamReader(System.in)           to test code\strokec5 \
        \strokec4 // FileReader("usaco.in")                 to read file from USACO\strokec5 \
        \strokec4 // BufferedReader(), then readLine()      read one line\strokec5 \
        \strokec4 // It is ok to use Scanner, but stick with BufferedReader.\strokec5 \
\
2.\strokec4  BufferedWriter gives efficiency, PrintWriter provides formatting. \strokec5 \
        \strokec4 // System.out.println();                  print to console\strokec5 \
        \strokec4 // PrintWriter(new BufferedWriter(new FileWriter("usaco.out")))\strokec5 \
        \strokec4 // PrintWriter(), then pw.println()		print a line to the file.\strokec5 \
        \strokec4 // remember to close pw pw.close(). \
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b \cf2 \ul \ulc2 Math class
\f1\b0 \ulnone \
Math.max(int a, int b); \
Math.min(int a, int b);\
\
\
\pard\pardeftab720\sl105\sa298\partightenfactor0

\f0\b \cf2 \cb1 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 USACO 2015 December Contest, Bronze Problem 1. Fence Painting 
\f1\b0 \cf2 \cb3 \expnd0\expndtw0\kerning0
\ulnone \outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \ul \ulc2 Idea\ulnone \
1. Simulate the problem. \
	boolean array b\
	read the first line, loop from a to b and set these values to true. \
	read the second line, loop from c to d and set these values to true.\
	count the number of TRUE. \
2. Solve without loop\
	if not overlapped, add the length of the two sessions (b-a) + (d-c)\
	if overlapped, (b-a) + (d-c) - overlap portion\
		assume [a, b] comes first, overlap = c-b. \
\

\f0\b \ul USACO 2016 December Contest, Bronze Problem 1. Square Pasture\

\f1\b0 Idea\ulnone \
Find max x: (Axhi, Axlo, Bxhi, Bxlo); max(1, 6, 8, 4) \'97> 8;\
Find min x: \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 (Axhi, Axlo, Bxhi, Bxlo); min(1, 6, 8, 4) \'97> 1;\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 Find max y: (Ayhi, Aylo, Byhi, Bylo); max(6, 8, 8, 9) \'97> 8;\
Find min y: (Ayhi, Aylo, Byhi, Bylo); min(6, 8, 8, 9) \'97> 1;\
\
side = max(max.x - min.x, max.y - min.y) \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97> 7;\
Return side * side \'96\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96\'96> 49;\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 	\
\pard\pardeftab720\sl105\sa298\partightenfactor0

\f2\b\fs36 \cf2 \cb1 \strokec2 \
}