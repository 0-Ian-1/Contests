{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red205\green205\blue205;}
{\*\expandedcolortbl;;\csgray\c0\c0;\csgray\c84070;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 String st
\f1\b0 \ulnone \
1. st = char[] array: method st.toCharArray() convert st to char array\
2. st.compareTo(), check more, less, or equal.\
3. st.equals(), strictly equal\
4. st.charAt(), character at index i\
5. st.length(), # of characters\
6. st.concat(), add the second string to the end of the first. note that this creates a new string. \
7. Strings are immutable. Do not use Strings in loop. \
	alternative: String builder/String buffers, mutable.\
\

\f2 \cb2 String Builder sample code (mutable): 
\f1 \
\cb3 	
\f2 StringBuilder sb = new StringBuilder();\
	sb.append(\'93string\'94);\
	sb.delete(0, 3);\
	sb.toString();
\f1 \
\cb1 \

\f0\b \ul String Operation
\f1\b0 \ulnone \
1. String Search - st.indexOf(some sub string); st.charAt(index);\
2. String Equal\
3. String Replace\
4. Substring\
5. StringTokenizer\
6. Convert String to Integer: Integer.parseInt(); }